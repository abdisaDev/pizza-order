generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  CUSTOMER
  RESTURANT
}
model User {
  id String @id @default(uuid())
  name String
  email String @unique
  status Boolean? @default(false)
  password String
  location String
  phone_number String
  type UserType @default(CUSTOMER)
  role_id String?
  role Role? @relation(fields: [role_id], references: [id])
  resturant Resturant?
  orders Order[]
  aggrement Boolean

  @@map("users")
}

model Resturant {
  id String @id @default(uuid())
  name String
  total_orders Int
  admin_id String @unique
  admin User @relation(fields: [admin_id], references: [id])
  pizzas Pizza[]
  orders Order[]

  @@map("resturants")
}

model Pizza {
  id String @id @default(uuid())
  name String
  price String
  resturant_id String @unique
  resturant Resturant @relation(fields: [resturant_id], references: [id])
  toppings Topping[] @relation("PizzaToppings")
  order_id String
  order Order? @relation(fields: [order_id], references: [id])

  @@map("pizzas")
}

model Topping {
  id String @id @default(uuid())
  name String
  pizzas Pizza[] @relation("PizzaToppings")

  @@map("toppings")
}

model Order {
  id String @id @default(uuid())
  total_amount Int
  status String
  created_at DateTime @default(now())
  user_id String @unique
  user User @relation(fields: [user_id], references: [id])
  resturant_id String @unique
  resturant Resturant @relation(fields: [resturant_id], references: [id])
  pizza Pizza[]

  @@map("orders")
}

model Role {
  id String @id @default(uuid())
  name String
  created_at DateTime @default(now())
  users User[]
  permissions Permission[]   @relation("RolePermissions")

  @@map("roles")
}

model Permission {
  id String @id @default(uuid())
  name String
  roles Role[] @relation("RolePermissions")

  @@map("permission")
}